# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - SeguimientoVacantesUV

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Instalar PHP y Composer
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          extensions: mbstring, openssl, pdo, pdo_mysql, tokenizer, xml, ctype, json

      - name: Install PHP dependencies (Production)
        run: composer install --no-dev --optimize-autoloader

      # Instalar Node.js y NPM
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install NPM dependencies
        run: npm install

      - name: Build frontend assets
        run: npm run build

      # Preparar estructura de directorios de Laravel
      - name: Prepare Laravel directories
        run: |
          mkdir -p storage/framework/{cache,sessions,views}
          mkdir -p bootstrap/cache
          chmod -R 775 storage bootstrap/cache
          touch storage/framework/cache/.gitkeep
          touch storage/framework/sessions/.gitkeep
          touch storage/framework/views/.gitkeep
          touch bootstrap/cache/.gitkeep

      # Script de inicio para Azure (sin generación de clave)
      - name: Create startup script
        run: |
          echo '#!/bin/bash' > startup.sh
          echo 'mkdir -p /home/site/wwwroot/storage/framework/{cache,sessions,views}' >> startup.sh
          echo 'mkdir -p /home/site/wwwroot/bootstrap/cache' >> startup.sh
          echo 'chmod -R 775 /home/site/wwwroot/storage /home/site/wwwroot/bootstrap/cache' >> startup.sh
          echo 'cd /home/site/wwwroot' >> startup.sh
          echo 'if [ ! -f .env ]; then cp .env.example .env; fi' >> startup.sh
          echo 'php artisan key:generate --force' >> startup.sh
          echo 'php artisan config:cache' >> startup.sh
          echo 'php artisan route:cache' >> startup.sh
          echo 'php artisan view:cache' >> startup.sh
          echo 'cp -r public/* .' >> startup.sh
          echo 'apache2-foreground' >> startup.sh
          chmod +x startup.sh


      # Configuración específica para Azure
      - name: Add Azure specific configurations
        run: |
          mkdir -p .azure
          echo "WEBSITES_ENABLE_APP_SERVICE_STORAGE=true" > .azure/.env
          echo "SCM_DO_BUILD_DURING_DEPLOYMENT=false" >> .azure/.env

      # Empaquetar para despliegue
      - name: Zip artifact for deployment
        run: |
          chmod -R 755 .
          zip -r release.zip . \
            -x "*.git*" ".github/*" "node_modules/*" "tests/*" "storage/logs/*" ".env*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Extract artifact
        run: unzip release.zip -d .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_30E5EEDFFF694570921F01B2EC773227 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_82AA6698381649D79E69319F96380CFA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8E4EE9E97F4F4FA6B73B3D7E4AF0CA8F }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'SeguimientoVacantesUV'
          slot-name: 'Production'
          package: release.zip
