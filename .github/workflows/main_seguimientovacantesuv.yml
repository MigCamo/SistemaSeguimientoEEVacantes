name: Build and deploy PHP app to Azure Web App - SeguimientoVacantesUV

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Instalar PHP y Composer
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          extensions: mbstring, openssl, pdo, pdo_mysql, pdo_sqlsrv, sqlsrv, tokenizer, xml, ctype, json

      - name: Install PHP dependencies (Production)
        run: composer install --no-dev --optimize-autoloader --working-dir=.

      # Instalar Node.js y compilar assets
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install NPM dependencies
        run: npm install

      - name: Build frontend assets
        run: npm run build

      # Preparar directorios de Laravel
      - name: Prepare Laravel directories
        run: |
          mkdir -p storage/framework/{cache,sessions,views}
          mkdir -p bootstrap/cache
          chmod -R 775 storage bootstrap/cache

      # Verificar que vendor existe
      - name: Check vendor folder
        run: ls -lah vendor || echo "⚠️ Vendor folder missing!"

      # Crear script de inicio
      - name: Create startup script
        run: |
          echo '===== Iniciando startup.sh para Laravel en Azure ====='

          cat > startup.sh <<'EOF'
          #!/bin/bash
          set -e
          echo "===== Iniciando startup.sh para Laravel en Azure ====="

          cd /home/site/wwwroot

          # Limpiar caches de Laravel
          php artisan config:clear || true
          php artisan route:clear || true
          php artisan view:clear || true

          # Redirigir la raíz web de Azure (html) hacia public/
          if [ -d "/home/site/wwwroot/public" ]; then
            rm -rf /home/site/wwwroot/html
            ln -s /home/site/wwwroot/public /home/site/wwwroot/html
            echo "Symlink creado: /home/site/wwwroot/html -> public"
          else
            echo "⚠️ No existe carpeta public/, revisa el deploy"
          fi

          echo "Startup script terminado, Azure manejará nginx/php-fpm."
          EOF

          chmod +x startup.sh

      # Configuración específica para Azure
      - name: Add Azure specific configurations
        run: |
          mkdir -p .azure
          echo "WEBSITES_ENABLE_APP_SERVICE_STORAGE=true" > .azure/.env
          echo "SCM_DO_BUILD_DURING_DEPLOYMENT=false" >> .azure/.env

      # Empaquetar artefacto
      - name: Zip artifact for deployment
        run: |
          chmod -R 755 .
          zip -r release.zip . \
            -x "*.git*" ".github/*" "node_modules/*" "tests/*" "storage/logs/*" ".env*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Extract artifact
        run: unzip release.zip -d .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_30E5EEDFFF694570921F01B2EC773227 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_82AA6698381649D79E69319F96380CFA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8E4EE9E97F4F4FA6B73B3D7E4AF0CA8F }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'SeguimientoVacantesUV'
          slot-name: 'Production'
          package: release.zip
